@model CRESME.Data.Quiz
@{
    ViewData["Title"] = "CRESME";

    DateTime StartDate = DateTime.Now;

    Random rand = new Random();
    int column1 = 0;
    int column2 = 0;
    int column3 = 0;
    int column4 = 0;
    int column5 = 0;
    bool Done = false;
    int numLoops = 0;
    while(!Done || numLoops>9999){  //assigns each columnx variable a unique random number from 1-4 or 1-5 depending on the column count
        numLoops++;
        if (column1 == 0)
        {
            column1 = Model.NumColumns == 4 ? rand.Next(1, 5) : rand.Next(1, 6);
        }
        else if (column2 == 0 || column2 == column1)
        {
            column2 = Model.NumColumns == 4 ? rand.Next(1,5) : rand.Next(1,6);
        }
        else if (column3 == 0 || (column3 == column2 || column3 == column1))
        {
            column3 = Model.NumColumns == 4 ? rand.Next(1, 5) : rand.Next(1, 6);
        }
        else if (column4 == 0 || (column4 == column3 || (column4 ==column2 || column4==column1)))
        {
            column4 = Model.NumColumns == 4 ? rand.Next(1, 5) : rand.Next(1, 6);
        }
        else if ((column5 == 0 || (column5 == column4 || (column5 == column3 || (column5 == column2 || column5 == column1)))) && Model.NumColumns == 5)
        {
            column5 = Model.NumColumns == 4 ? rand.Next(1, 5) : rand.Next(1, 6);
        }
        else
        {
            Done = true;    
        }
    }
}
<h1>@ViewData["Title"]</h1>

@*<object >*@
@*<object data="/images/USMLE_Lab_Reference_Values.pdf" type="application/pdf" width="100%" height="500px"></object>*@


<div class="container-fluid border m-3 w-auto mw-50" style="height:670px;">
    <div class="text-center">
        @if (Model.Image0 != null && (Model.ImagePos0 == "1"))
        {
            <img src="@Model.Image0">
        }
        else if (Model.Image1 != null && (Model.ImagePos1 == "1"))
        {
            <img src="@Model.Image1">
        }
        else if (Model.Image2 != null && (Model.ImagePos2 == "1"))
        {
            <img src="@Model.Image2">
        }
        else if (Model.Image3 != null && (Model.ImagePos3 == "1"))
        {
            <img src="@Model.Image3">
        }
        else if (Model.Image4 != null && (Model.ImagePos4 == "1"))
        {
            <img src="@Model.Image4">
        }
        else if (Model.Image5 != null && (Model.ImagePos5 == "1"))
        {
            <img src="@Model.Image5">
        }
        else if (Model.Image6 != null && (Model.ImagePos6 == "1"))
        {
            <img src="@Model.Image6">
        }
        else if (Model.Image7 != null && (Model.ImagePos7 == "1"))
        {
            <img src="@Model.Image7">
        }
        else if (Model.Image8 != null && (Model.ImagePos8 == "1"))
        {
            <img src="@Model.Image8">
        }
        else if (Model.Image9 != null && (Model.ImagePos9 == "1"))
        {
            <img src="@Model.Image9">
        }
    </div>
    <h4 class="text-center">
        Introduction:
        <div id="introduction">@Html.DisplayFor(model => model.PatientIntro)</div>
    </h4>
    <br /><br />
    <h4 class="text-center">
        Instructions:
        <p id="instructions">
            For each case presention detail the anticipated "classic" physical exam
            findings and match the case and PE box to the corresponding lab findings.
            Finally, enter the lead diagnosis for each case presentation and align
            these in the column with the HPI and physical findings. When done, save
            your slide to PDF or JPG and submit to the assignment in Webcourses.
        </p>
    </h4>
</div>


<style>
    .bable.draggable-word {
        background-color: red;
        padding: 0px;
        border: 1px solid green;
        -webkit-touch-callout: none;
        -webkit-user-select: none;
        -khtml-user-select: auto;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
        border-collapse: collapse;
        border-spacing: 0;
        padding: 0;
        margin: 0;
        line-height: 1;
        width: 100%;
        height: 50px;
    }

    .drop-zone {
        height: 190px;
        padding-left: 0px;
        padding-right: 0px;
        border: 1px solid white;
        background-color: #AABACC;
        margin-top: 0px;
        text-align: center;
        overflow: auto;
    }

    [draggable=true] {
        cursor: default;
        margin-top: 0px;
        margin-bottom: 0px;
        margin-top: 0px;
    }

    .bable {
        border-color: #600;
        border-width: 0 0 1px 1px;
        border-style: solid;
    }

    .box {
        border: 3px solid #765;
        background-color: #ddd;
        border-radius: .5em;
        padding: 10px;
        cursor: move;
    }

    .box.over {
        border: 3px dotted #666;
    }

    .background-blue {
        background-color: #9dc3e6;
    }

    .background-yellow {
        background-color: #ffe699;
    }

    .background-purple {
        background-color: #d7bcea;
    }

    .background-green {
        background-color: #a5e9aa;
    }

    .product {
        float: left;
        border: 2px solid black;
        text-align: center;
        cursor: move;
        overflow: auto;
    }

    .bag {
        height: 50px;
        text-align: center;
    }
    /*
    [class*="col"] {
        padding: 1rem;
        background-color: #224163;
        border: 2px solid #fff;
        color: #fff;
        }*/
</style>

<script>
    var user = "";
    var multiples = false;
    var data;

    function dragStartHandler(event, id, zone1) {
        event.dataTransfer.setData('Object', event.target.id);
        user = id;
        multiples = false;
        data = event.dataTransfer.getData('Object');


        var box = event.target;

        console.log("Zone: " + box.id);
        //console.log(zone1.hasChildNodes());
        zone = box.parentNode;
        if (data.substring(1, 7) == "yellow") {
            if (zone.id.substring(21, 22) != "") {
                console.log("Zone: " + zone.id.substring(21, 22));
                console.log(document.getElementById("PhysicalAnswer" + box.id.substring(0, 11) + zone.id.substring(21, 22)).value)
                document.getElementById("PhysicalAnswer" + box.id.substring(0, 11) + zone.id.substring(21, 22)).value = 0
                console.log(document.getElementById("PhysicalAnswer" + box.id.substring(0, 11) + zone.id.substring(21, 22)).value)
                console.log("TABLE")
                console.log(document.getElementById("PhysicalAnswer+yellow-box1").value)
                console.log(document.getElementById("PhysicalAnswer+yellow-box2").value)
                console.log(document.getElementById("PhysicalAnswer+yellow-box3").value)
                console.log(document.getElementById("PhysicalAnswer+yellow-box4").value)
            }
        } else if (data.substring(1, 7) == "purple") {
            if(zone.id.substring(21, 22) != "") {
                console.log("Zone: " + zone.id.substring(21, 22));
                console.log(document.getElementById("DiagnostAnswer" + box.id.substring(0, 11) + zone.id.substring(21, 22)).value)
                document.getElementById("DiagnostAnswer" + box.id.substring(0, 11) + zone.id.substring(21, 22)).value = 0
                console.log(document.getElementById("DiagnostAnswer" + box.id.substring(0, 11) + zone.id.substring(21, 22)).value)
                console.log("TABLE")
                console.log(document.getElementById("DiagnostAnswer+purple-box1").value)
                console.log(document.getElementById("DiagnostAnswer+purple-box2").value)
                console.log(document.getElementById("DiagnostAnswer+purple-box3").value)
                console.log(document.getElementById("DiagnostAnswer+purple-box4").value)
            }
        }
        
            
        
        //console.log(zone1)
        //console.log(zone1.childElementCount);
        //zone1 = event.dataTransfer.getData('Object');
        //console.log(zone1)
        //while (zone1.id.substring(0, 10) !== 'drop-zone5') {
        //    zone1 = zone1.parentNode;
        //}

        //console.log("Checking if element has child nodes: " + data.hasChildNodes())
        // multipleDrag(data,"false");

    }
    function dropHandler(event) {
        preventDefaults(event);
        if (!event.target) {
            // alert('we');
            event.target = event.srcElement;
        }
        var dropzone = event.target;
        console.log("Drop")
        console.log(data)
        data = event.dataTransfer.getData('Object');
        console.log(data)
        while (dropzone.id.substring(0, 9) !== 'drop-zone') {
            dropzone = dropzone.parentNode;
        }
        console.log(dropzone);
        console.log(dropzone.hasChildNodes());
        console.log(document.getElementById("drop-zone-yellow-box1"));
        console.log(document.getElementById("drop-zone-yellow-box1").childElementCount);
        console.log(dropzone.id[21])
        console.log(data.substring(0, 11))
        if (dropzone.childElementCount == false && (dropzone.id.substring(17, 20) == data.substring(8, 11) || dropzone.id.substring(9, 16) == data.substring(0, 7))) {
            dropzone.appendChild(document.getElementById(data));
            console.log(document.getElementById(dropzone.id).getAttribute("name"));
            console.log(dropzone);
            if (data.substring(1, 7) == "yellow") {
                //console.log("PhysicalAnswer"+data)
                //console.log(document.getElementById(document.getElementById("PhysicalAnswer"+data.substring(0,11)+dropzone.id[21])))
                if (dropzone.id.substring(21, 22) != "")
                    document.getElementById("PhysicalAnswer" + data.substring(0, 11) + dropzone.id.substring(21,22)).value = document.getElementById(data).getAttribute("name");
                //console.log(document.getElementById(document.getElementById("PhysicalAnswer" + data.substring(0, 11) + dropzone.id[21]).value))
                console.log("TABLE")
                console.log(document.getElementById("PhysicalAnswer+yellow-box1").value)
                console.log(document.getElementById("PhysicalAnswer+yellow-box2").value)
                console.log(document.getElementById("PhysicalAnswer+yellow-box3").value)
                console.log(document.getElementById("PhysicalAnswer+yellow-box4").value)
            } else if (data.substring(1, 7) == "purple") {
                //console.log("DiagnostAnswer"+data)
                //console.log(document.getElementById("DiagnostAnswer" + data).value)
                if (dropzone.id.substring(21, 22) != "")
                    document.getElementById("DiagnostAnswer" + data.substring(0, 11) + dropzone.id.substring(21, 22)).value = document.getElementById(data).getAttribute("name");
                //console.log(document.getElementById("DiagnostAnswer" + data).value)
                console.log("TABLE")
                console.log(document.getElementById("DiagnostAnswer+purple-box1").value)
                console.log(document.getElementById("DiagnostAnswer+purple-box2").value)
                console.log(document.getElementById("DiagnostAnswer+purple-box3").value)
                console.log(document.getElementById("DiagnostAnswer+purple-box4").value)
            }
            
            document.getElementById(dropzone.id).getAttribute("name")
        }


        //data = event.dataTransfer.getData('Object');
        //event.target.appendChild(document.getElementById(data));
        document.getElementById(data).selectedIndex = -1;
        //alert(user);
    }

    function dragOverHandler(event) {
        preventDefaults(event);
    }

    function preventDefaults(event) {
        if (event.preventDefault) {
            event.preventDefault();
        }

        try {
            event.returnValue = false;
        }
        catch (exception) { }
    }

    var flag = 1;

    function myFunction() {
        if (flag === 1) {
            document.querySelectorAll('.background-blue').forEach(item => {
                item.style.backgroundColor = 'blue';
            });
            document.querySelectorAll('.background-yellow').forEach(item => {
                item.style.backgroundColor = 'yellow';
            });
            document.querySelectorAll('.background-purple').forEach(item => {
                item.style.backgroundColor = 'purple';
            });
            document.querySelectorAll('.background-green').forEach(item => {
                item.style.backgroundColor = 'green';
            });
            flag = -1;
        } else {
            document.querySelectorAll('.background-blue').forEach(item => {
                item.style.backgroundColor = '#9dc3e6';
            });
            document.querySelectorAll('.background-yellow').forEach(item => {
                item.style.backgroundColor = '#ffe699';
            });
            document.querySelectorAll('.background-purple').forEach(item => {
                item.style.backgroundColor = '#d7bcea';
            });
            document.querySelectorAll('.background-green').forEach(item => {
                item.style.backgroundColor = '#a5e9aa';
            });
            console.log("Color Blind")
            flag = 1;
        }
    }
</script>
<div class="container-fluid border rounded">
    <div class="container-fluid border rounded">
        <form id="Form1" asp-controller="Attempt" asp-action="SubmitAttempt" method="post" enctype="multipart/form-data">
            <div class="row bg-white">
                <div class="col-4">
                    <div class="row">
                        <div class="drop-zone col-6" ondragover="dragOverHandler(event);" ondrop="dropHandler(event)" id="drop-zone-yellow-box1" ondragend="sort('drop-zone1')">
                            <div name="1" class="background-yellow product col-12 h-100" draggable="true" ondragstart="dragStartHandler(event,'4', this);" id="+yellow-box1" ;">
                                <div>
                                    <button type="button" class="format btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdropPhysicalA">
                                        expand
                                    </button>
                                </div><!-- Button trigger modal -->
                                <span class="text-center" style="white-space: pre-line">@Model.PhysicalA</span>
                            </div>
                        </div>
                        <div class="drop-zone col-6" ondragover="dragOverHandler(event);" ondrop="dropHandler(event)" id="drop-zone-yellow-box2">
                            <div name="2" class="background-yellow product col-12 h-100" draggable="true" ondragstart="dragStartHandler(event,'4', this);" id="+yellow-box2" ;">
                                <div>
                                    @*<button type="button" class="format btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdropPhysicalB">
                                        expand
                                    </button>*@

                                    <a type="button" class="format btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdropPhysicalB"> expand </a>
                                </div>
                                <span class="text-center" style="white-space: pre-line">@Model.PhysicalB</span>
                            </div>
                        </div>
                        <div class="drop-zone col-6" ondragover="dragOverHandler(event);" ondrop="dropHandler(event)" id="drop-zone-yellow-box3">
                            <div name="3" class="background-yellow  product col-12 h-100" draggable="true" ondragstart="dragStartHandler(event,'4', this);" id="+yellow-box3" ;">
                                <div>
                                    <button type="button" class="format btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdropPhysicalC">
                                        expand
                                    </button>
                                </div>
                                <span class="text-center" style="white-space: pre-line">@Model.PhysicalC</span>
                            </div>
                        </div>
                        <div class="drop-zone col-6" ondragover="dragOverHandler(event);" ondrop="dropHandler(event)" id="drop-zone-yellow-box4">
                            <div name="4" class="background-yellow product col-12 h-100" draggable="true" ondragstart="dragStartHandler(event,'4', this);" id="+yellow-box4" ;">
                                <div>
                                    <button type="button" class="format btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdropPhysicalD">
                                        expand
                                    </button>
                                </div>
                                <span class="text-center" style="white-space: pre-line">@Model.PhysicalD</span>
                            </div>
                        </div>
                        <div class="drop-zone col-6" ondragover="dragOverHandler(event);" ondrop="dropHandler(event)" id="drop-zone-purple-box1">
                            <div name="1" class="background-purple product col-12 h-100" draggable="true" ondragstart="dragStartHandler(event,'4', this);" id="+purple-box1" ;">
                                <div>
                                    <button type="button" class="format btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdropDiagnosticA">
                                        expand
                                    </button>
                                </div>
                                <span class="text-center" style="white-space: pre-line">@Model.DiagnosticA</span>
                            </div>
                        </div>
                        <div class="drop-zone col-6" ondragover="dragOverHandler(event);" ondrop="dropHandler(event)" id="drop-zone-purple-box2">
                            <div name="2" class="background-purple product col-12 h-100" draggable="true" ondragstart="dragStartHandler(event,'4', this);" id="+purple-box2" ;">
                                <div>
                                    <button type="button" class="format btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdropDiagnosticB">
                                        expand
                                    </button>
                                </div>
                                <span class="text-center" style="white-space: pre-line">@Model.DiagnosticB</span>
                            </div>
                        </div>
                        <div class="drop-zone col-6" ondragover="dragOverHandler(event);" ondrop="dropHandler(event)" id="drop-zone-purple-box3">
                            <div name="3" class="background-purple product col-12 h-100" draggable="true" ondragstart="dragStartHandler(event,'4', this);" id="+purple-box3" ;">
                                <div>
                                    <button type="button" class="format btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdropDiagnosticC">
                                        expand
                                    </button>
                                </div>
                                <span class="text-center" style="white-space: pre-line">@Model.DiagnosticC</span>
                            </div>
                        </div>
                        <div class="drop-zone col-6" ondragover="dragOverHandler(event);" ondrop="dropHandler(event)" id="drop-zone-purple-box4">
                            <div name="4" class="background-purple product col-12 h-100" draggable="true" ondragstart="dragStartHandler(event,'4', this);" id="+purple-box4" ;">
                                <div>
                                    <button type="button" class="format btn btn-primary" data-bs-toggle="modal" data-bs-target="#staticBackdropDiagnosticD">
                                        expand
                                    </button>
                                </div>
                                <span class="text-center" style="white-space: pre-line">@Model.DiagnosticD</span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col">
                    <div class="row">
                        <div class="background-blue drop-zone col" ondragover="dragOverHandler(event);" ondrop="dropHandler(event)" id="drop-zone">
                            @if (column1 == 1){
                                <span style="white-space: pre-line">@Model.HistoryA</span>}
                            else if (column1 == 2){
                                <span style="white-space: pre-line">@Model.HistoryB</span>}
                            else if (column1 == 3){
                                <span style="white-space: pre-line">@Model.HistoryC</span>}
                            else if (column1 == 4){
                                <span style="white-space: pre-line">@Model.HistoryD</span>}
                            else if (column1 == 5){
                                <span style="white-space: pre-line">@Model.HistoryE</span>}
                        </div>
                        <div class="background-blue drop-zone col" ondragover="dragOverHandler(event);" ondrop="dropHandler(event)" id="drop-zone">
                            @if (column2 == 1){
                                <span style="white-space: pre-line">@Model.HistoryA</span>}
                            else if (column2 == 2){
                                <span style="white-space: pre-line">@Model.HistoryB</span>}
                            else if (column2 == 3){
                                <span style="white-space: pre-line">@Model.HistoryC</span>}
                            else if (column2 == 4){
                                <span style="white-space: pre-line">@Model.HistoryD</span>}
                            else if (column2 == 5){
                                <span style="white-space: pre-line">@Model.HistoryE</span>}
                        </div>
                        <div class="background-blue drop-zone col" ondragover="dragOverHandler(event);" ondrop="dropHandler(event)" id="drop-zone">
                            @if (column3 == 1){
                                <span style="white-space: pre-line">@Model.HistoryA</span>}
                            else if (column3 == 2){
                                <span style="white-space: pre-line">@Model.HistoryB</span>}
                            else if (column3 == 3){
                                <span style="white-space: pre-line">@Model.HistoryC</span>}
                            else if (column3 == 4){
                                <span style="white-space: pre-line">@Model.HistoryD</span>}
                            else if (column3 == 5){
                                <span style="white-space: pre-line">@Model.HistoryE</span>}
                        </div>
                        <div class="background-blue drop-zone col" ondragover="dragOverHandler(event);" ondrop="dropHandler(event)" id="drop-zone">
                            @if (column4 == 1){
                                <span style="white-space: pre-line">@Model.HistoryA</span>}
                            else if (column4 == 2){
                                <span style="white-space: pre-line">@Model.HistoryB</span>}
                            else if (column4 == 3){
                                <span style="white-space: pre-line">@Model.HistoryC</span>}
                            else if (column4 == 4){
                                <span style="white-space: pre-line">@Model.HistoryD</span>}
                            else if (column4 == 5){
                                <span style="white-space: pre-line">@Model.HistoryE</span>}
                        </div>
                    </div>
                    <input type="hidden" id="PhysicalAnswer+yellow-box1" name="PhysicalAnswerA" value="0" runat="server" required>
                    <input type="hidden" id="PhysicalAnswer+yellow-box2" name="PhysicalAnswerB" value="0" runat="server" required>
                    <input type="hidden" id="PhysicalAnswer+yellow-box3" name="PhysicalAnswerC" value="0" runat="server" required>
                    <input type="hidden" id="PhysicalAnswer+yellow-box4" name="PhysicalAnswerD" value="0" runat="server" required>
                    <input type="hidden" id="PhysicalAnswer+yellow-box5" name="PhysicalAnswerE" value="0" runat="server" required>
                    <div class="row">

                        <div class="background-yellow drop-zone col" ondragover="dragOverHandler(event);" ondrop="dropHandler(event)" id="drop-zone+yellow-area1"></div>
                        <div class="background-yellow drop-zone col" ondragover="dragOverHandler(event);" ondrop="dropHandler(event)" id="drop-zone+yellow-area2"></div>
                        <div class="background-yellow drop-zone col" ondragover="dragOverHandler(event);" ondrop="dropHandler(event)" id="drop-zone+yellow-area3"></div>
                        <div class="background-yellow drop-zone col" ondragover="dragOverHandler(event);" ondrop="dropHandler(event)" id="drop-zone+yellow-area4"></div>

                    </div>
                    <input type="hidden" id="DiagnostAnswer+purple-box1" name="DiagnosticAnswerA" value="0" runat="server" required>
                    <input type="hidden" id="DiagnostAnswer+purple-box2" name="DiagnosticAnswerB" value="0" runat="server" required>
                    <input type="hidden" id="DiagnostAnswer+purple-box3" name="DiagnosticAnswerC" value="0" runat="server" required>
                    <input type="hidden" id="DiagnostAnswer+purple-box4" name="DiagnosticAnswerD" value="0" runat="server" required>
                    <input type="hidden" id="DiagnostAnswer+purple-box5" name="DiagnosticAnswerE" value="0" runat="server" required>
                    <div class="row">

                        <div class="background-purple drop-zone col" ondragover="dragOverHandler(event);" ondrop="dropHandler(event)" id="drop-zone+purple-area1"></div>
                        <div class="background-purple drop-zone col" ondragover="dragOverHandler(event);" ondrop="dropHandler(event)" id="drop-zone+purple-area2"></div>
                        <div class="background-purple drop-zone col" ondragover="dragOverHandler(event);" ondrop="dropHandler(event)" id="drop-zone+purple-area3"></div>
                        <div class="background-purple drop-zone col" ondragover="dragOverHandler(event);" ondrop="dropHandler(event)" id="drop-zone+purple-area4"></div>

                    </div>
                    <div class="row">
                        <div class="background-green drop-zone col" ondragover="dragOverHandler(event);" ondrop="dropHandler(event)" id="drop-zone">
                            <textarea class="form-control" name="FreeResponseA" id="exampleFormControlTextarea1" rows="3" form="Form1"></textarea>
                        </div>
                        <div class="background-green drop-zone col" ondragover="dragOverHandler(event);" ondrop="dropHandler(event)" id="drop-zone">
                            <textarea class="form-control" name="FreeResponseB" id="exampleFormControlTextarea1" rows="3" form="Form1"></textarea>
                        </div>
                        <div class="background-green drop-zone col" ondragover="dragOverHandler(event);" ondrop="dropHandler(event)" id="drop-zone">
                            <textarea class="form-control" name="FreeResponseC" id="exampleFormControlTextarea1" rows="3" form="Form1"></textarea>
                        </div>
                        <div class="background-green drop-zone col" ondragover="dragOverHandler(event);" ondrop="dropHandler(event)" id="drop-zone">
                            <textarea class="form-control" name="FreeResponseD" id="exampleFormControlTextarea1" rows="3" form="Form1"></textarea>
                        </div>
                    </div>
                    <input type="hidden" id="NumImage0Clicks" name="NumImage0Clicks" value="0" runat="server" required>
                    <input type="hidden" id="NumImage1Clicks" name="NumImage1Clicks" value="0" runat="server" required>
                    <input type="hidden" id="NumImage2Clicks" name="NumImage2Clicks" value="0" runat="server" required>
                    <input type="hidden" id="NumImage3Clicks" name="NumImage3Clicks" value="0" runat="server" required>
                    <input type="hidden" id="NumImage4Clicks" name="NumImage4Clicks" value="0" runat="server" required>
                    <input type="hidden" id="NumImage5Clicks" name="NumImage5Clicks" value="0" runat="server" required>
                    <input type="hidden" id="NumImage6Clicks" name="NumImage6Clicks" value="0" runat="server" required>
                    <input type="hidden" id="NumImage7Clicks" name="NumImage7Clicks" value="0" runat="server" required>
                    <input type="hidden" id="NumImage8Clicks" name="NumImage8Clicks" value="0" runat="server" required>
                    <input type="hidden" id="NumImage9Clicks" name="NumImage9Clicks" value="0" runat="server" required>

                    <input type="hidden" name="column1" value=@column1 runat="server" required>
                    <input type="hidden" name="column2" value=@column2 runat="server" required>
                    <input type="hidden" name="column3" value=@column3 runat="server" required>
                    <input type="hidden" name="column4" value=@column4 runat="server" required>
                    <input type="hidden" name="column5" value=@column5 runat="server" required>

                    <input type="hidden" name="StartTime" value=@StartDate>
                    
                    <input type="hidden" name="QuizStringID" value=@Model.QuizId>                   
                    <button type="button" class="btn btn-primary" onclick="myFunction()">Switch Colors</button>
                    <button type="submit" class="btn btn-primary">Submit</button>
                </div>
            </div>
        </form>
    </div>
</div>



<!-- PhysicalA -->
<div class="modal fade" id="staticBackdropPhysicalA" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <span class="text-center" style="white-space: pre-line">@Model.PhysicalA</span>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- PhysicalB -->
<div class="modal fade" id="staticBackdropPhysicalB" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <span class="text-center" style="white-space: pre-line">@Model.PhysicalB</span>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- PhysicalC -->
<div class="modal fade" id="staticBackdropPhysicalC" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <span class="text-center" style="white-space: pre-line">@Model.PhysicalC</span>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- PhysicalD -->
<div class="modal fade" id="staticBackdropPhysicalD" data-bs-backdrop="staticPhysicalD" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <span class="text-center" style="white-space: pre-line">@Model.PhysicalD</span>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- DiagnosticA -->
<div class="modal fade" id="staticBackdropDiagnosticA" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <span class="text-center" style="white-space: pre-line">@Model.DiagnosticA</span>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- DiagnosticB -->
<div class="modal fade" id="staticBackdropDiagnosticB" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <span class="text-center" style="white-space: pre-line">@Model.DiagnosticB</span>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- DiagnosticC -->
<div class="modal fade" id="staticBackdropDiagnosticC" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <span class="text-center" style="white-space: pre-line">@Model.DiagnosticC</span>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- DiagnosticD -->
<div class="modal fade" id="staticBackdropDiagnosticD" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <span class="text-center" style="white-space: pre-line">@Model.DiagnosticD</span>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
