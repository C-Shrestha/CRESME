

@model IEnumerable<CRESME.Data.Attempt>

@{
    ViewData["Title"] = "CRESME Details";
}


<style>


    .custom_btn {
        border-color: #F1C400 !important;
        color: #F1C400;
        font-weight: bold;
    }

    .table-bordered th, .table-bordered td {
        border: 1px solid grey !important
    }

        .table-bordered th, .table-bordered td 
    { border: 1px solid grey!important }

</style>


<br />
<br />



<div id="accordion">
    <div class="card">


        <div class="card-header bg-dark text-center" id="headingOne" style="color: #F1C400;">
            <h1 class="text-center">Details: @Model.FirstOrDefault().QuizName </h1>
        </div>


        <div class="card-header bg-light text-center" id="headingOne">
            <h5 class="mb-0">
                <button class="btn  custom_btn  btn-outline-success collapsed" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="false" aria-controls="collapseOne">
                    CRESME Statistics
                </button>
            </h5>
        </div>

        <div id="collapseOne" class="collapse show" aria-labelledby="headingOne" data-bs-parent="#accordion">
            <div class="card-body">


                @{
                    double total = 0.0;
                    double num = 0.0;
                    double average = 0.0;
                    double maxScore = 0.0;
                    double minScore = 0.0;
                    double medianValue = 0.0;


                    List<double> scoreList = new List<double>();
                    List<TimeSpan> durations = new List<TimeSpan>();
                    TimeSpan totalDuration = TimeSpan.Zero;
                    TimeSpan averageDuration = TimeSpan.Zero;


                    if ((Model.Count() == 1) && (Model.FirstOrDefault().AttemptId == 0))
                    {
                        ;
                    }
                    else
                    {

                        foreach (var item in Model)
                        {
                            total += (double)item.Score;
                            num++;
                            scoreList.Add((double)item.Score);
                            TimeSpan x = (item.EndTime - item.StartTime);
                            durations.Add(x);
                            totalDuration += x;


                        }

                        average = total / num;


                        double[] scores = scoreList.ToArray();

                        static double GetMedian(double[] scoreNumbers)
                        {

                            if (scoreNumbers == null || scoreNumbers.Length == 0)
                            {

                                return 0;
                            }

                            //make sure the list is sorted, but use a new array

                            else
                            {
                                double[] sortedPNumbers = (double[])scoreNumbers.Clone();
                                Array.Sort(sortedPNumbers);

                                //get the median
                                int size = sortedPNumbers.Length;
                                int mid = size / 2;
                                double median = (size % 2 != 0) ? (double)sortedPNumbers[mid] : ((double)sortedPNumbers[mid] + (double)sortedPNumbers[mid - 1]) / 2;
                                return median;
                            }

                        }

                        medianValue = GetMedian(scores);


                        averageDuration = (durations.Count > 0) ? TimeSpan.FromTicks(totalDuration.Ticks / durations.Count) : TimeSpan.Zero;

                    }



                }


                


                <p>
                    <b>Student Count:</b> @num<br />
                </p>

                <p>
                    <b>Mean Score:</b>  @average    <br />
                    <b>Median Score: </b>  @medianValue <br />
                </p>

                <p>
                    <b>Maximum Score:</b> @maxScore    <br />
                    <b>Minimum Score:</b> @minScore    <br />
                </p>

                <p>

                    <b>Mean Time (minutes):</b>  @Math.Round(@averageDuration.TotalMinutes, 2)  minute(s)  <br />
                    <b>Mean Time (hours):</b>     @Math.Round(@averageDuration.TotalHours , 2)   hour(s)    <br />
                </p>



            </div>
        </div>

    </div>


    <div class="card">

        <div class="card-header text-center" id="studentData">
            <h5 class="mb-0">

                <button class="btn  custom_btn  btn-outline-success collapsed" data-bs-toggle="collapse" data-bs-target="#collapseStudentData" aria-expanded="false" aria-controls="collapseStudentData">
                    CRESME Data
                </button>
            </h5>
        </div>

        <div id="collapseStudentData" class="collapse" aria-labelledby="studentData" data-bs-parent="#accordion">
            <div class="card-body">


                <br />
                <br />
                <br />

                <div class="table-responsive">


                    <table class="table table-bordered table-secondary table-hover table-sm" id="dataTableData" width="100%" cellspacing="0">

          


                        <thead>
                            <tr>


                                <th scope="col" class="table-dark">
                                    NID
                                </th>
                                <th scope="col" class="table-dark">
                                    Name
                                </th>

                                <th scope="col" class="table-dark">
                                    @Html.DisplayNameFor(model => model.Block)
                                </th>

                                <th scope="col" class="table-dark">
                                    @Html.DisplayNameFor(model => model.Course)
                                </th>

                                <th scope="col" class="table-dark">
                                    @Html.DisplayNameFor(model => model.Term)
                                </th>

                                <th scope="col" class="table-dark">
                                    @Html.DisplayNameFor(model => model.Score)
                                </th>


                                @*DO NOT delete the empty tags below, they are needed for dataTable column counts to be equal between "thead" and "tbody"*@
                                @*<th></th>
                                <th></th>
                                <th></th>
                                *@

                            </tr>
                        </thead>




                        <tbody>

                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.StudentNID)
                                    </td>

                                    <td>
                                        @Html.DisplayFor(modelItem => item.StudentName)
                                    </td>

                                    <td>
                                        @Html.DisplayFor(modelItem => item.Block)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.Course)
                                    </td>

                                    <td>
                                        @Html.DisplayFor(modelItem => item.Term)
                                    </td>

                                    <td>
                                        @Html.DisplayFor(modelItem => item.Score)
                                    </td>


                                </tr>
                            }

                        </tbody>

                    </table>

                </div>


                <br />
                <br />
                <br />

            </div>
        </div>

    </div>


    <div class="card">

        <div class="card-header bg-light text-center" id="headingTwo">
            <h5 class="mb-0">
                <button class="btn custom_btn  btn-outline-success collapsed" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                    Download CRESME Data
                </button>
            </h5>
        </div>

        <div id="collapseTwo" class="collapse" aria-labelledby="headingTwo" data-bs-parent="#accordion">
            <div class="card-body">
                <br />

                <form asp-controller="Admin" asp-action="QuizDetailsToExcel">

                    <input type="hidden" id="name" name="QuizName" value="@Model.FirstOrDefault().QuizName" />
                    <button type="submit" class="btn btn-md btn-primary">
                        <i class="fa-solid fa-file-arrow-down"></i>
                        Export CRESME Data
                    </button>
                </form>
                <br />

                <form asp-controller="Admin" asp-action="ExportForGrading">

                    <input type="hidden" id="name" name="QuizName" value="@Model.FirstOrDefault().QuizName" />
                    <button type="submit" class="btn btn-md btn-primary">
                        <i class="fa-solid fa-file-arrow-down"></i>
                        Export for Grading
                    </button>
                </form>
                <br />

            </div>
        </div>

    </div>

    <div class="card">


        <div class="card-header bg-light text-center" id="headingThree">
            <h5 class="mb-0">
                <button class="btn custom_btn  btn-outline-success collapsed" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                    Download CRESME
                </button>
            </h5>
        </div>

        <div id="collapseThree" class="collapse" aria-labelledby="headingThree" data-bs-parent="#accordion">
            <div class="card-body">

                <br />
                <form asp-controller="Admin" asp-action="ExportQuizFromDetails">
                    <input type="hidden" id="name" name="QuizName" value="@Model.FirstOrDefault().QuizName" />
                    <button type="submit" class="btn btn-md btn-primary">
                        <i class="fa-solid fa-file-arrow-down"></i>
                        Export CRESME
                    </button>
                </form>
                <br />

                <form asp-controller="Admin" asp-action="ExportQuizImages">
                    <input type="hidden" name="QuizName" value="@Model.FirstOrDefault().QuizName" />
                    <button type="submit" class="btn btn-md btn-primary">
                        <i class="fa-solid fa-file-arrow-down"></i>
                        Download Images
                    </button>
                </form>

            </div>
        </div>

    </div>


</div>

<br />
<br />
<br />


@section scripts
    {
    <script src="~/js/datatable_file.js"></script>
}